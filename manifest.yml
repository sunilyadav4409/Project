apiVersion: v1
kind: Namespace
metadata:
  name: !{namespace}!
  annotations:
    meta.helm.sh/release-name: #{LowerCaseRepoNameDash}#
    meta.helm.sh/release-namespace: !{namespace}!
  labels:
    app.kubernetes.io/managed-by: Helm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #{LowerCaseRepoNameDash}#
  namespace: !{namespace}!
  annotations:
    meta.helm.sh/release-name: #{LowerCaseRepoNameDash}#
    meta.helm.sh/release-namespace: !{namespace}!
  labels:
    app.kubernetes.io/managed-by: Helm  
spec:
  replicas: 3
  selector:
    matchLabels:
      app: #{LowerCaseRepoNameDash}#
  template:
    metadata:
      labels:
        app: #{LowerCaseRepoNameDash}#
    spec:
      containers:
        - name: #{LowerCaseRepoNameDash}#
          image: #{DockerRepo}#/#{LowerCaseRepoName}#:#{Build.SourceVersion}#
          resources:
            limits:
              cpu: 500m
              memory: 900Mi
            requests:
              cpu: 200m
              memory: 250Mi
          env:
            - name: DOMAIN_PID
              valueFrom:
                secretKeyRef:
                  name: kube-security-finance
                  key: domainpid.userid
            - name: DOMAIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kube-security-finance
                  key: domainpid.password
            - name: REDIS_KEY
              valueFrom:
                secretKeyRef:
                  name: #{LowerCaseRepoNameDash}#-redis
                  key: redis.key
            - name: payments-rolloutio-key
              valueFrom:
                secretKeyRef:
                  name: kube-security-finance-rollout-key
                  key: payments-rolloutio-key
            - name: CARRIERPAYMENT_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: kube-security-finance-carrierpayment-clientid
                  key: carrierPayment.ClientId
            - name: CARRIERPAYMENT_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: kube-security-finance-carrierpayment-clientid
                  key: carrierPayment.ClientSecret
            - name: JAVA_OPTS
              value: -Dserver.port=8080 -Dspring.cloud.config.uri=https://!{configUrl}!.jbhunt.com/configurationv2 -Druntime.environment=!{deployEnv}! -Dspring.profiles.active=!{springProfile}!
          ports:
            - name: http
              containerPort: 8080
          startupProbe:
            httpGet:
              path: /carrierpaymentautopay/health
              port: http
            failureThreshold: 25
          livenessProbe:
            httpGet:
              path: /carrierpaymentautopay/health
              port: http
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /carrierpaymentautopay/health
              port: http
            failureThreshold: 1
---
apiVersion: flagger.app/v1beta1
kind: AlertProvider
metadata:
  name: #{LowerCaseRepoNameDash}#
  namespace: !{namespace}!
  annotations:
      meta.helm.sh/release-name: #{LowerCaseRepoNameDash}#
      meta.helm.sh/release-namespace: !{namespace}!
  labels:
    app.kubernetes.io/managed-by: Helm      
spec:
  type: msteams
  channel: Flagger
  address: https://jbhunt.webhook.office.com/webhookb2/4f6675c0-9634-4b81-bff5-f19364398a2d@5d135798-0ae4-4f20-a663-a223e2cd1f4e/IncomingWebhook/a18748e37e8941639fbdb53392096efb/799c55a1-6dd8-4222-9c74-79120bf2a748
---
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: #{LowerCaseRepoNameDash}#
  namespace: !{namespace}!
  annotations:
    meta.helm.sh/release-name: #{LowerCaseRepoNameDash}#
    meta.helm.sh/release-namespace: !{namespace}!
  labels:
    app.kubernetes.io/managed-by: Helm
spec:
  provider: nginx
  # deployment reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: #{LowerCaseRepoNameDash}#
  # ingress reference
  ingressRef:
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    name: #{LowerCaseRepoNameDash}#
  # HPA reference (optional)
  autoscalerRef:
    apiVersion: autoscaling/v2beta2
    kind: HorizontalPodAutoscaler
    name: #{LowerCaseRepoNameDash}#
  # the maximum time in seconds for the canary deployment
  # to make progress before it is rollback (default 600s)
  progressDeadlineSeconds: 190
  service:
    # ClusterIP port number
    port: 8080
    # container port number or name
    targetPort: 8080
    # port name can be http or grpc (default http)
    # portName: http
  analysis:
    # schedule interval (default 60s)
    interval: 2m
    # max number of failed metric checks before rollback
    threshold: 10
    # max traffic percentage routed to canary
    # percentage (0-100)
    maxWeight: 50
    # canary increment step
    # percentage (0-100)
    stepWeight: 5
    alerts:
      - name: "Auto Pay Alerts"
        severity: info
        providerRef:
          name: #{LowerCaseRepoNameDash}#
          namespace: !{namespace}!
    # NGINX Prometheus checks
    # deploy straight to production without
    # the metrics and webhook checks
    metrics:
      - name: error-percent
        templateRef:
          name: error-percent-#{LowerCaseRepoNameDash}#
        thresholdRange:
          max: 5
        interval: 30s
    # testing (optional)
    webhooks:
      - name: "manual gate"
        type: confirm-promotion
        url: http://flagger-loadtester.kube-system/gate/check
      - name: "rollback manually check"
        type: rollback
        url: http://flagger-loadtester.kube-system/rollback/check
      - name: "close promotion manual gate"
        type: post-rollout
        url: http://flagger-loadtester.kube-system/gate/close
        metadata:
          name: #{LowerCaseRepoNameDash}#
          namespace: !{namespace}!
      - name: "close rollback manual gate"
        type: post-rollout
        url: http://flagger-loadtester.kube-system/rollback/close
        metadata:
          name: #{LowerCaseRepoNameDash}#
          namespace: !{namespace}!
---
apiVersion: flagger.app/v1beta1
kind: MetricTemplate
metadata:
  name: error-percent-#{LowerCaseRepoNameDash}#
  namespace: !{namespace}!
  annotations:
    meta.helm.sh/release-name: #{LowerCaseRepoNameDash}#
    meta.helm.sh/release-namespace: !{namespace}!
  labels:
    app: #{LowerCaseRepoNameDash}#
    app.kubernetes.io/managed-by: Helm  
spec:
  provider:
    address: http://kube-prometheus-kube-prome-prometheus.monitoring:9090/prometheus
    type: prometheus
  query: |
    100-sum(
      rate(
        http_server_requests_seconds_count{
          namespace="{{ namespace }}",
          job=~"{{ target }}.*", uri!="/health", uri!="/prometheus",
          status!~"5.*"
        }[{{ interval }}]
      )
    )/
    sum(
      rate(
        http_server_requests_seconds_count{
          namespace="{{ namespace }}", uri!="/health", uri!="/prometheus",
          job=~"{{ target }}.*"
        }[{{ interval }}]
      )
    )*100
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: #{LowerCaseRepoNameDash}#
  namespace: !{namespace}!
  annotations:
    meta.helm.sh/release-name: #{LowerCaseRepoNameDash}#
    meta.helm.sh/release-namespace: !{namespace}!
  labels:
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: !{aliasEnv}!.jbhunt.com
      http:
        paths:
          - path: /carrierpaymentautopay
            pathType: ImplementationSpecific
            backend:
              service:
                name: #{LowerCaseRepoNameDash}#
                port:
                  number: 8080
---
# Canary Monitoring
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    prometheus: kube-prometheus
  name: #{LowerCaseRepoNameDash}#-canary
  namespace: monitoring
  annotations:
    meta.helm.sh/release-name: #{LowerCaseRepoNameDash}#
    meta.helm.sh/release-namespace: !{namespace}!
  labels:
    app.kubernetes.io/managed-by: Helm    
spec:
  endpoints:
    - port: http
      interval: 10s
      path: /carrierpaymentautopay/prometheus
  selector:
    matchLabels:
      app: #{LowerCaseRepoNameDash}#-canary
  namespaceSelector:
    matchNames:
      - !{namespace}!
---
# Primary Monitoring
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    prometheus: kube-prometheus
  name: #{LowerCaseRepoNameDash}#-primary
  namespace: monitoring
  annotations:
    meta.helm.sh/release-name: #{LowerCaseRepoNameDash}#
    meta.helm.sh/release-namespace: !{namespace}!
  labels:
    app.kubernetes.io/managed-by: Helm    
spec:
  endpoints:
    - port: http
      interval: 10s
      path: /carrierpaymentautopay/prometheus
  selector:
    matchLabels:
      app: #{LowerCaseRepoNameDash}#-primary
  namespaceSelector:
    matchNames:
      - !{namespace}!
---
kind: HorizontalPodAutoscaler
apiVersion: autoscaling/v2beta1
metadata:
  name: #{LowerCaseRepoNameDash}#
  namespace: !{namespace}!
  annotations:
    meta.helm.sh/release-name: #{LowerCaseRepoNameDash}#
    meta.helm.sh/release-namespace: !{namespace}!
  labels:
    app.kubernetes.io/managed-by: Helm      
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: #{LowerCaseRepoNameDash}#
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Pods
      pods:
        metricName: counter_active_requests
        targetAverageValue: 10
---
kind: HorizontalPodAutoscaler
apiVersion: autoscaling/v2beta1
metadata:
  name: #{LowerCaseRepoNameDash}#-primary
  namespace: !{namespace}!
  annotations:
    meta.helm.sh/release-name: #{LowerCaseRepoNameDash}#
    meta.helm.sh/release-namespace: !{namespace}!
  labels:
    app.kubernetes.io/managed-by: Helm      
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: #{LowerCaseRepoNameDash}#
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Pods
      pods:
        metricName: counter_active_requests
        targetAverageValue: 10        
---
apiVersion: v1
kind: Secret
metadata:
  namespace: !{namespace}!
  name: kube-security-finance
data:
  domainpid.userid: !{encodedUserid}!
  domainpid.password: !{pidfna1-PrivateKey}!
---
apiVersion: v1
kind: Secret
metadata:
  namespace: !{namespace}!
  name: #{LowerCaseRepoNameDash}#-redis
data:
  redis.key: !{payments-redis-kube-password}!
---
apiVersion: v1
kind: Secret
metadata:
  namespace: !{namespace}!
  name:  kube-security-finance-rollout-key
data:
  payments-rolloutio-key: !{payments-rolloutio-key}!
